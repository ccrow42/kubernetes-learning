
# Fix iSCSI iqn

## Deployments

# Review the yaml file
cat helloworld.yaml

#Deploy the hello world deployment
kubectl -n lesson04-1 apply -f helloworld.yaml

# Connect to the node part and refresh, notice the changing container ID (HINT: you may need to hold down on shift)

# Delete a pod
kubectl get pods -n lesson04-1
kubectl -n lesson04-1 delete pod <podName>
# Notice the pod is recreated. Why is this?

# Scale the deployment
kubectl get deployments -A
kubectl -n lesson04-1 scale deployment helloworld-deployment --replicas=2
kubectl get pods -n lesson04-1

# Talk about minio app

# Intro to the diff command
#Used to look for changes between files
cd ~/kubernetes-learning/lesson-04
lesson-04]$ diff minio-manual/minio-pvc.yaml minio-pvc/minio-pvc.yaml

# Review the yaml files making up this deployment

# deploy storage the good old fashioned way
sudo mkdir /mnt/minio
kubectl create namespace lesson04-2
kubectl -n lesson04-2 apply -f minio-manual/.

# Use what you have learned to check the status of the deployment, pod, pv and pvc

kubectl -n lesson04-2 get svc

# connect to the minio deployment and upload some data

# Check to make sure the data uploaded

# Questions:
# How did it know which PV to use?
# what happens if the node fails?


# Now we will use a CSI driver. First, we need to install helm, think package manager for k8s

# Install helm
curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
# Take a moment to appriciate what the above did

# Modify for the PSOValues.yaml
vi resources/PSOValues.yaml

# Install PSO
kubectl create namespace pso
helm repo add pure https://purestorage.github.io/pso-csi
helm repo update
helm search repo pure-pso -l
helm install pure-pso pure/pure-pso --version 6.0.3 --namespace pso -f resources/PSOValues.yaml --dry-run --debug

The above will perform a dry run, look at what the helm chart does, do you recognize anything in the yaml files?

# Install PSO (for real this time)
helm install pure-pso pure/pure-pso --version 6.0.3 --namespace pso -f resources/PSOValues.yaml
kubectl get pods -A --watch
kubectl get storageclass

# let's talk about the startup process

# let's talk about common things that can go wrong


# Now lets try minio again:
kubectl create namespace lesson04-3
kubectl -n lesson04-3 apply -f minio-pvc/.
